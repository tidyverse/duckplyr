diff --git b/R/relocate.R a/R/relocate.R
--- b/R/relocate.R
+++ a/R/relocate.R
@@ -1,10 +1,29 @@
 # Generated by 02-duckplyr_df-methods.R
+#' @rdname relocate.duckplyr_df
 #' @export
 relocate.duckplyr_df <- function(.data, ..., .before = NULL, .after = NULL) {
-  # Our implementation
-  duckplyr_error <- rel_try(NULL,
-    "No relational implementation for {.code relocate()}" = TRUE,
+  loc <- eval_relocate(
+    expr = expr(c(...)),
+    data = .data,
+    before = enquo(.before),
+    after = enquo(.after),
+    before_arg = ".before",
+    after_arg = ".after"
+  )
+
+  exprs <- exprs_from_loc(.data, loc)
+
+  # Ensure `relocate()` appears in call stack
+  duckplyr_error <- rel_try(list(name = "relocate", x = .data, args = try_list(dots = enquos(...), .before = enquo(.before), .after = enquo(.after))),
+    #' @section Fallbacks:
+    #' There is no DuckDB translation in `relocate.duckplyr_df()`
+    #' - with a selection that returns no columns.
+    #'
+    #' These features fall back to [dplyr::relocate()], see `vignette("fallback")` for details.
+    "Zero-column result set not supported." = (length(exprs) == 0),
     {
+      rel <- duckdb_rel_from_df(.data)
+      out <- exprs_project(rel, exprs, .data)
       return(out)
     }
   )
