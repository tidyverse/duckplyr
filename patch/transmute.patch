diff --git b/R/transmute.R a/R/transmute.R
index c37cc552..14b4abbe 100644
--- b/R/transmute.R
+++ a/R/transmute.R
@@ -1,10 +1,26 @@
 # Generated by 02-duckplyr_df-methods.R
+#' @rdname transmute.duckplyr_df
 #' @export
 transmute.duckplyr_df <- function(.data, ...) {
-  # Our implementation
-  rel_try(NULL,
-    "No relational implementation for transmute()" = TRUE,
+  force(.data)
+
+  dots <- check_transmute_args(...)
+  dots <- dplyr_quosures(!!!dots)
+  dots <- fix_auto_name(dots)
+
+  rel_try(list(name = "transmute", x = .data, args = try_list(dots = enquos(...))),
+    #' @section Fallbacks:
+    #' You cannot use `transmute.duckplyr_df`
+    #' - with a selection that returns no columns:
+    #'
+    #' If you do the code will fall back to `dplyr::transmute()` without any error.
+    "Can't use relational with zero-column result set." = (length(dots) == 0),
     {
+      exprs <- rel_translate_dots(dots, .data)
+      rel <- duckdb_rel_from_df(.data)
+      out_rel <- rel_project(rel, exprs)
+      out <- rel_to_df(out_rel)
+      out <- dplyr_reconstruct(out, .data)
       return(out)
     }
   )
