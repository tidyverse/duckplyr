diff --git b/R/summarise.R a/R/summarise.R
index 7f335ebd..16a3cfc0 100644
--- b/R/summarise.R
+++ a/R/summarise.R
@@ -1,10 +1,60 @@
 # Generated by 02-duckplyr_df-methods.R
+utils::globalVariables("___row_number")
+
+#' @rdname summarise.duckplyr_df
 #' @export
 summarise.duckplyr_df <- function(.data, ..., .by = NULL, .groups = NULL) {
-  # Our implementation
-  rel_try(NULL,
-    "No relational implementation for summarise()" = TRUE,
+  force(.data)
+
+  by <- eval_select_by(enquo(.by), .data)
+
+  rel_try(list(name = "summarise", x = .data, args = try_list(dots = enquos(...), by = syms(by), .groups = .groups)),
+    #' @section Fallbacks:
+    #' You cannot use `summarise.duckplyr_df`
+    #' - with `.groups = "rowwise"`.
+    #'
+    #' If you do the code will fall back to `dplyr::summarise()` without any error.
+    'summarize(.groups = "rowwise") not supported' = identical(.groups, "rowwise"),
     {
+      rel <- duckdb_rel_from_df(.data)
+
+      dots <- dplyr_quosures(...)
+      dots <- fix_auto_name(dots)
+      dots <- dots[!duplicated(names(dots), fromLast = TRUE)]
+
+      oo <- (length(by) > 0) && oo_force()
+      if (oo) {
+        rel <- oo_prep(rel, colname = "___row_number", force = TRUE)
+      }
+
+      groups <- lapply(by, relexpr_reference)
+      aggregates <- rel_translate_dots_summarise(dots, .data)
+
+      if (oo) {
+        aggregates <- c(
+          list(rel_translate(
+            quo(min(`___row_number`)),
+            new_data_frame(list(`___row_number` = integer())),
+            alias = "___row_number"
+          )),
+          aggregates
+        )
+      }
+
+      out_rel <- rel_aggregate(rel, groups, unname(aggregates))
+      # https://github.com/duckdb/duckdb/issues/7095
+      if (length(groups) == 0) {
+        out_rel <- rel_distinct(out_rel)
+      }
+
+      if (oo) {
+        out_rel <- oo_restore(out_rel, "___row_number")
+      }
+
+      out <- rel_to_df(out_rel)
+      # https://github.com/tidyverse/dplyr/pull/6988
+      class(out) <- intersect(c("duckplyr_df", "tbl_df", "tbl", "data.frame"), class(.data))
+
       return(out)
     }
   )
@@ -12,6 +62,11 @@ summarise.duckplyr_df <- function(.data, ..., .by = NULL, .groups = NULL) {
   # dplyr forward
   summarise <- dplyr$summarise.data.frame
   out <- summarise(.data, ..., .by = {{ .by }}, .groups = .groups)
+  # dplyr_reconstruct() is not called here, restoring manually
+  if (!identical(.groups, "rowwise")) {
+    # https://github.com/tidyverse/dplyr/pull/6988
+    class(out) <- intersect(c("duckplyr_df", "tbl_df", "tbl", "data.frame"), class(.data))
+  }
   return(out)
 
   # dplyr implementation
